version: '2'
services:
  app: &app
    build:
      context: .
    ports:
      - 8000:8000
    links:
      - db
      - mock_fsbid
    depends_on:
      - db
      - mock_fsbid
      - rabbitmq
    # use this to run in https server locally
    # command: python manage.py runsslserver --certificate /app/talentmap_api/sp.crt --key /app/talentmap_api/sp.key 0.0.0.0:8000
    command: >
      bash -c "python show_logo.py
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    environment:
      - DJANGO_SECRET_KEY=development_secret_key
      - DATABASE_URL=postgres://talentmap-user@db/talentmap
      - DJANGO_DEBUG=true
  db:
    image: postgres:9.6.3
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=talentmap
      - POSTGRES_USER=talentmap-user
  mock_db:
    image: postgres:9.6.3
    volumes:
      - mock-pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=mockfsbid
      - POSTGRES_USER=mockfsbid-user
      - POSTGRES_PASSWORD=fsbid_pwd
  rabbitmq:
    image: rabbitmq:3.8-alpine
  celery_worker:
    <<: *app
    command: celery -A talentmap_api worker --loglevel=info
    ports: []
    depends_on:
      - db
      - mock_fsbid
      - rabbitmq
    links: 
      - db
      - mock_fsbid
volumes:
  pgdata:
  mock-pgdata:
