version: '2'
services:
  app:
    build:
      context: .
    links:
      - oracle
      - mock_fsbid
    depends_on:
      - oracle
      - mock_fsbid
    deploy:
      replicas: 1
    # use this to run in https server locally
    # command: python manage.py runsslserver --certificate /app/talentmap_api/sp.crt --key /app/talentmap_api/sp.key 0.0.0.0:8000
    command: >
      bash -c "python show_logo.py
      && echo 'Starting...'
      && ./wait-for-oracle.sh oracle:1521/oraclesid sys oraclepwd 'as sysdba'
      && ./create-oracle-user.sh oracle:1521/oraclesid sys oraclepwd 'as sysdba'
      && ./wait-for-oracle.sh oracle:1521/oraclepdb talentmap1 talentmap1 '' true
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    environment:
      - DJANGO_SECRET_KEY=development_secret_key
      - DATABASE_URL=oracle:1521/oraclepdb
      - DATABASE_USER=talentmap1
      - DATABASE_PW=talentmap1
      - DJANGO_DEBUG=true
      - EMAIL_ENABLED=true
      - EMAIL_HOST=host.docker.internal
      - EMAIL_PORT=1025
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_FROM_ADDRESS=talentmap-alert@local.dev
      - EMAIL_USE_TLS=false
      - EMAIL_IS_DEV=false
      - EMAIL_DEV_TO=${EMAIL_DEV_TO}
      - USE_CP_API_V2=true
      - USE_PV_API_V2=true
  haproxy:
    image: eeacms/haproxy
    depends_on:
    - app
    ports:
    - "8000:5000"
    - "1936:1936"
    environment:
      BACKENDS: "app"
      BACKENDS_PORT: "8000"
      DNS_ENABLED: "true"
      LOG_LEVEL: "info"
  oracle:
    ports:
      - 1521:1521
    image: mjoyce91/oracle193db:fast
    volumes:
      - oracle:/var/lib/oracle/data/
  mock_db:
    image: postgres:9.6.3
    volumes:
      - mock-pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=mockfsbid
      - POSTGRES_USER=mockfsbid-user
      - POSTGRES_PASSWORD=fsbid_pwd
  maildev:
    image: maildev/maildev
    ports:
      - "1080:80"
      - "1025:25"
volumes:
  oracle:
  mock-pgdata:
