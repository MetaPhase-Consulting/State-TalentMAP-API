version: '2'
services:
  app:
    build:
      context: .
    ports:
      - 8000:8000
    links:
      - oracle
    depends_on:
      - oracle
    # use this to run in https server locally
    # command: python manage.py runsslserver --certificate /app/talentmap_api/sp.crt --key /app/talentmap_api/sp.key 0.0.0.0:8000
    command: >
      bash -c "python show_logo.py
      && echo 'Starting...'
      && ./wait-for-oracle.sh oracle:1521/oraclesid sys oraclepwd 'as sysdba'
      && ./create-oracle-user.sh oracle:1521/oraclesid sys oraclepwd 'as sysdba'
      && ./wait-for-oracle.sh oracle:1521/oraclepdb talentmap1 talentmap1 '' true
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app:delegated
    environment:
      - DJANGO_SECRET_KEY=development_secret_key
      - DATABASE_URL=oracle:1521/oraclepdb
      - DATABASE_USER=talentmap1
      - DATABASE_PW=talentmap1
      - DJANGO_DEBUG=true
      - FSBID_API_URL=http://host.docker.internal:3333
      - EMPLOYEES_API_URL=http://host.docker.internal:3333/Employees
      - SECREF_URL=http://host.docker.internal:3333/v2/SECREF
      - CP_API_URL=http://host.docker.internal:3333/cyclePositions
      - ORG_API_URL=http://host.docker.internal:3333/Organizations
      - CLIENTS_API_URL=http://host.docker.internal:3333/Clients
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_FROM_ADDRESS=${EMAIL_FROM_ADDRESS}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_IS_DEV=${EMAIL_IS_DEV}
      - EMAIL_DEV_TO=${EMAIL_DEV_TO}
  oracle:
    ports:
      - 1521:1521
    image: mjoyce91/oracle193db:fast
    volumes:
      - oracle:/var/lib/oracle/data/:delegated
volumes:
  pgdata:
  oracle:
